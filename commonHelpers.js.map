{"version":3,"file":"commonHelpers.js","sources":["../src/js/favorites/favoritePart.js"],"sourcesContent":["import axios from 'axios';\nimport iziToast from 'izitoast';\nimport TypeIt from \"typeit\";\nimport 'izitoast/dist/css/iziToast.min.css';\nimport iconURL from '../../img/sprite.svg';\n\n// import { checkDay } from '../quote-of-the-day';\n// import { checkDay } from '../quote-of-the-day';\nimport { activeModalBtn } from '../modal-pop-up';\n\nconst favoriteInfo = \"<img class='favoritePart-img' src='./img/dumbbell.svg' alt=''> <p class='favoritePart-text'>It appears that you havent added any exercises to your favorites yet.To get started, you can add exercises that you like to your favorites for easier access in the future.</p>\";\nconst favoritePartInfo = document.querySelector('.favoritePartInfo');\nconst savedFavorites = localStorage.getItem('favoritesCard');\nconst quoteFavContainer = document.querySelector('.quote-fav-info');\nconst QUOTE_DATA_STORAGE = 'quote-of-the-day';\nconst DATE_STORAGE = \"date\"\nconst quoteDate = new Date()\nconst dayOfMonth = quoteDate.getDate()\n\nlet arrFavorite;\n\n\nasync function getQuoteResponse() {\n  try {\n  const quoteApi = axios.create({\n      baseURL: 'https://energyflow.b.goit.study/api',\n\n  });\n      const responseQuote = await quoteApi.get('/quote'); \n      const quoteResponseData = responseQuote.data\n      renderQuote(quoteResponseData);\n      saveQuoteAndData(quoteResponseData, dayOfMonth)\n      \n      \n} catch (error) {\niziToast.error({\n    timeout: 5000,\n    title: \"Error\",\n    message: error.message,\n    position: 'topRight',\n  });\n}\n}\n\ncheckDay();\n\n//! SAVE QUOTE AND DATA\nfunction saveQuoteAndData(data, day) {\n  localStorage.setItem(QUOTE_DATA_STORAGE, JSON.stringify(data));\n  localStorage.setItem(DATE_STORAGE, day);\n}\n\n//! RENDER QUOTE\nfunction renderQuote(data) {\n  const dataArray = [data];\n  quoteFavContainer.innerHTML = dataArray.reduce((acc, { quote, author }) =>\n      acc +\n      `<p class=\"quote-text\">${quote}</p>\n      <h3 class=\"quote-author\">${author}</h3>`, '');\n}\n\n\n//! CHECK DAY AND GET NEW QUOTE\nexport async function checkDay() {\n  const storedDate = localStorage.getItem(DATE_STORAGE);\nif (isNaN(storedDate)) {\n   iziToast.error({\n    timeout: 5000,\n    title: \"Error\",\n    message: error.message,\n    position: 'topRight',\n   });\n  return;\n}\nif (parseInt(storedDate) === dayOfMonth) {\n      const storedQuoteData = localStorage.getItem(QUOTE_DATA_STORAGE);\n      if (storedQuoteData) {\n          const parsedData = JSON.parse(storedQuoteData);\n          renderQuote(parsedData);\n      }\n      return;\n  }\n  await getQuoteResponse();\n  localStorage.setItem(DATE_STORAGE, dayOfMonth.toString());\n}\n\n\n\n\nnew TypeIt(\"#fan-quote\", {\n  speed: 26,\n  startDelay: 300,\n  waitUntilVisible: true,\n  afterComplete: function (instance) {\n      instance.destroy();\n    }\n}).go();\n\n\nfunction saveExercises() {\n  if (savedFavorites != null) {\n    arrFavorite = JSON.parse(savedFavorites);\n      try {\n        favoritePartInfo.innerHTML = ' ';\n        renderFavorites(arrFavorite);\n      } catch (error) {\n        iziToast.error({\n          message: \"Error, query. repeat the request.\",\n          color: 'red',\n          position: 'topCenter',\n        });\n      }\n  } else {\n      favoritePartInfo.insertAdjacentHTML('afterbegin', favoriteInfo);\n  }\n}\n\nasync function renderFavorites(arr) {\n  let favCard = arr.reduce(\n      (html, { burnedCalories, name, bodyPart, time, target, _id }) =>\n        html +\n        `<li class=\"fav-gallery-card\">\n      <div class=\"header-card\">\n        <div class=\"fav-titel-card\">  \n          <div class=\"workout\">WORKOUT</div>\n            <div class=\"trash\">\n              <svg class=\"icon-trash\" width=\"16\" height=\"16\">\n                <use href=\"${iconURL}#trash\"></use>\n              </svg>\n            </div>\n          </div>\n\n        <div class=\"workout-btn-container\" data-action=\"right\">\n          <button class=\"workout-btn\" id=\"${_id}\">Start\n            <svg class=\"icon-right\" width=\"14\" height=\"16\">\n                <use href=\"${iconURL}#icon-right\"></use>\n            </svg>\n          </button>\n        </div>\n      </div>\n      <div class=\"title-card\">\n          <div class=\"icon-card\">\n              <svg class=\"run\" width=\"24\" height=\"24\">\n                  <use href=\"${iconURL}#run\"></use>\n              </svg>\n          </div>\n          <h3>${name}</h3>\n      </div>\n      <ul class=\"params-card\">\n            <li class=\"calories\"><span class=\"params-text\">Burned calories:</span> ${burnedCalories}/${time}min</li>\n            <li class=\"body-part\"><span class=\"params-text\">Body part:</span> ${bodyPart}</li>\n            <li class=\"target\"><span class=\"params-text\">Target:</span> ${target}</li>\n      </ul>\n    </li>`,\n      ''\n    )\n    favoritePartInfo.innerHTML = favCard;\n  activeModalBtn();\n}\n\n\nsaveExercises();\n\n// actBtnTrash();\n// // deleteToFavorite\n\n\n\n// const actBtnTrash = () => {\n//     const btnsTrash = document.querySelectorAll(\".trash\");\n//     btnsTrash.forEach(el => console.log(el))\n//     //   el.addEventListener('click'), event => \n//     // console.log(event));\n\n\n//     favoritePartInfo.addEventListener('click', event => {\n//     event.preventDefault();\n//     console.log(event.currentTarget.id);\n//   })\n   \n// }\n\n"],"names":["favoriteInfo","favoritePartInfo","savedFavorites","quoteFavContainer","QUOTE_DATA_STORAGE","DATE_STORAGE","quoteDate","dayOfMonth","arrFavorite","getQuoteResponse","quoteResponseData","axios","renderQuote","saveQuoteAndData","error","iziToast","checkDay","data","day","dataArray","acc","quote","author","storedDate","storedQuoteData","parsedData","TypeIt","instance","saveExercises","renderFavorites","arr","favCard","html","burnedCalories","name","bodyPart","time","target","_id","iconURL","activeModalBtn"],"mappings":"yHAUA,MAAMA,EAAe,8QACfC,EAAmB,SAAS,cAAc,mBAAmB,EAC7DC,EAAiB,aAAa,QAAQ,eAAe,EACrDC,EAAoB,SAAS,cAAc,iBAAiB,EAC5DC,EAAqB,mBACrBC,EAAe,OACfC,EAAY,IAAI,KAChBC,EAAaD,EAAU,QAAS,EAEtC,IAAIE,EAGJ,eAAeC,GAAmB,CAChC,GAAI,CAMA,MAAMC,GADgB,MAJTC,EAAM,OAAO,CAC1B,QAAS,qCAEf,CAAG,EACwC,IAAI,QAAQ,GACT,KACxCC,EAAYF,CAAiB,EAC7BG,EAAiBH,EAAmBH,CAAU,CAGpD,OAASO,EAAO,CAChBC,EAAS,MAAM,CACX,QAAS,IACT,MAAO,QACP,QAASD,EAAM,QACf,SAAU,UACd,CAAG,CACH,CACA,CAEAE,IAEA;AACA,SAASH,EAAiBI,EAAMC,EAAK,CACnC,aAAa,QAAQd,EAAoB,KAAK,UAAUa,CAAI,CAAC,EAC7D,aAAa,QAAQZ,EAAca,CAAG,CACxC,CAEA;AACA,SAASN,EAAYK,EAAM,CACzB,MAAME,EAAY,CAACF,CAAI,EACvBd,EAAkB,UAAYgB,EAAU,OAAO,CAACC,EAAK,CAAE,MAAAC,EAAO,OAAAC,CAAQ,IAClEF,EACA,yBAAyBC,CAAK;AAAA,iCACHC,CAAM,QAAS,EAAE,CAClD,CAGA;AACO,eAAeN,GAAW,CAC/B,MAAMO,EAAa,aAAa,QAAQlB,CAAY,EACtD,GAAI,MAAMkB,CAAU,EAAG,CACpBR,EAAS,MAAM,CACd,QAAS,IACT,MAAO,QACP,QAAS,MAAM,QACf,SAAU,UACd,CAAI,EACF,MACF,CACA,GAAI,SAASQ,CAAU,IAAMhB,EAAY,CACnC,MAAMiB,EAAkB,aAAa,QAAQpB,CAAkB,EAC/D,GAAIoB,EAAiB,CACjB,MAAMC,EAAa,KAAK,MAAMD,CAAe,EAC7CZ,EAAYa,CAAU,CACzB,CACD,MACH,CACD,MAAMhB,EAAgB,EACtB,aAAa,QAAQJ,EAAcE,EAAW,SAAU,CAAA,CAC1D,CAKA,IAAImB,EAAO,aAAc,CACvB,MAAO,GACP,WAAY,IACZ,iBAAkB,GAClB,cAAe,SAAUC,EAAU,CAC/BA,EAAS,QAAO,CACjB,CACL,CAAC,EAAE,GAAE,EAGL,SAASC,GAAgB,CACvB,GAAI1B,GAAkB,KAAM,CAC1BM,EAAc,KAAK,MAAMN,CAAc,EACrC,GAAI,CACFD,EAAiB,UAAY,IAC7B4B,EAAgBrB,CAAW,CAC5B,MAAe,CACdO,EAAS,MAAM,CACb,QAAS,oCACT,MAAO,MACP,SAAU,WACpB,CAAS,CACF,CACP,MACMd,EAAiB,mBAAmB,aAAcD,CAAY,CAEpE,CAEA,eAAe6B,EAAgBC,EAAK,CAClC,IAAIC,EAAUD,EAAI,OACd,CAACE,EAAM,CAAE,eAAAC,EAAgB,KAAAC,EAAM,SAAAC,EAAU,KAAAC,EAAM,OAAAC,EAAQ,IAAAC,CAAK,IAC1DN,EACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAMqBO,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAMQD,CAAG;AAAA;AAAA,6BAElBC,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAQLA,CAAO;AAAA;AAAA;AAAA,gBAGtBL,CAAI;AAAA;AAAA;AAAA,qFAGiED,CAAc,IAAIG,CAAI;AAAA,gFAC3BD,CAAQ;AAAA,0EACdE,CAAM;AAAA;AAAA,WAG1E,EACD,EACDpC,EAAiB,UAAY8B,EAC/BS,GACF,CAGAZ"}